@model SKSLearningSystem.Models.ViewModels.MyProfileViewModel
    @using System.Linq;
<div id="profileContainer">
    <div class="alertContainer" style="display:none">
        <h1 id="infoBox" class="alertUser"> text </h1>
    </div>
    <div id="profilePicture">
        <img class="reduced" id="pic" src="@Url.Action("RenderImage", new {})" />
        <p>
            @using (Html.BeginForm("MyProfile", "Home", FormMethod.Post,
                new { enctype = "multipart/form-data", id = "formForCourse" }))
            {
           
            @Html.LabelFor(x => x.ProfilePicture, "Click here to select photos", new { @class = "picEdit" })

                @Html.TextBox("image", null,
       new { @type = "file", @class = "picEdit", @name = "image", @onchange = "showInfo('JSON Selected')" })

                @Html.TextBoxFor(model => model.ProfilePicture, "",
       new { @type = "file", @multiple = "multiple", @class = "inputField", @onchange = "showInfo('Photos Selected')" })

                <button type="submit" class="btn-upload">Upload</button>
            }
       
            </p>
        </div>
    <div class="course-container">
        
        <div class="current-selected">
            <div class="nav-buttons">
                <button id="completed" class="nav-one-button">Completed</button>
                <button id="pending" class="nav-one-button">Pending</button>
                <button id="started" class="nav-one-button">Started</button>
                <button id="overdue" class="nav-one-button">Overdue</button>
            </div>
            <hr />
            <div class="overdue" hidden="hidden">
                @for (int i = 0; i < Model.Overdues.Count; i++)
                {
                    <div class="single-course">
                        <div  id="image-course"><img class="reduced" src="@Url.Action("RenderImage","Course", new { id = Model.Overdues[i].PicId})" /></div>
                        <div id="mandatory-course">
                            <span class="descriptive">Priority:</span>
                            @if (Model.Overdues[i].Mandatory)
                            {
                                @:Mandatory
                        }
                            else
                            {
                                @:Optional
                        }
                        </div>
                        <div id="coursename"> <span class="descriptive">Course:</span>  @Html.DisplayFor(x => x.Overdues[i].CourseName)</div>
                        <div id="assignementdate"> <span class="descriptive">Assignement Date:</span>  @Html.DisplayFor(x => x.Overdues[i].AssignmentDate)</div>
                        <div id="duedate"> <span class="descriptive">Grade :</span> @Html.DisplayFor(x => x.Overdues[i].Grade)</div>
                        <div id=" Filler"></div>

                        @Html.ActionLink("Take Course", "takecourseasstate", "course", new { courseStateId = Model.Overdues[i].Id}, new { id = "course-button" })
                    </div>
                }
            </div>
            <div class="pending" >
               
                @for (int i = 0; i < Model.Pendings.Count; i++)
            {
                    <div class="single-course">
                        <div  id="image-course"><img class="reduced" src="@Url.Action("RenderImage","Course", new { id = Model.Pendings[i].PicId})" /></div>
                        <div id="mandatory-course"> <span class="descriptive">Priority:</span>
                        @if (Model.Pendings[i].Mandatory)
                        {
                            @:Mandatory
                        }
                        else
                        {
                            @:Optional
                        }
                        </div>
                        <div id="coursename"> <span class="descriptive">Course:</span>  @Html.DisplayFor(x => x.Pendings[i].CourseName)</div>
                        <div id="assignementdate"> <span class="descriptive">Assignement Date:</span>  @Html.DisplayFor(x => x.Pendings[i].AssignmentDate)</div>
                        <div id="duedate"> <span class="descriptive">Due date:</span> @Html.DisplayFor(x => x.Pendings[i].DueDate)</div>
                        <div id=" Filler"></div>
                        
                        @Html.ActionLink("Take Course", "takecourseasstate", "course", new { courseStateId = Model.Pendings[i].Id }, new { id = "course-button" })
                    </div>
                }
            </div>
            <div class="started" hidden="hidden">
              @for (int i = 0; i < Model.Started.Where(x => x.State == "Started").ToList().Count; i++)
                  {
                <div class="single-course">
                    <div  id="image-course"><img class="reduced" src="@Url.Action("RenderImage","Course", new { id = Model.Started[i].PicId})" /></div>
                    <div id="mandatory-course">
                        <span class="descriptive">Priority:</span>
                        @if (Model.Started[i].Mandatory)
              {
                            @:Mandatory
                        }
                        else
                        {
                            @:Optional
                        }
                    </div>
                    <div id="coursename"> <span class="descriptive">Course:</span>  @Html.DisplayFor(x => x.Started[i].CourseName)</div>
                    <div id="assignementdate"> <span class="descriptive">Assignement Date:</span>  @Html.DisplayFor(x => x.Started[i].AssignmentDate)</div>
                    <div id="duedate"> <span class="descriptive">Due date:</span> @Html.DisplayFor(x => x.Started[i].DueDate)</div>
                    <div id=" Filler"></div>

                    @Html.ActionLink("Take Course", "takecourseasstate", "course", new { courseStateId = Model.Started[i].Id }, new { id = "course-button" })
                </div>
              }
            </div>
            <div class="completed" hidden="hidden">
           @for (int i = 0; i < Model.Completed.Where(x => x.State == "Completed").ToList().Count; i++)
               {
            <div class="single-course">
                <div  id="image-course"><img class="reduced" src="@Url.Action("RenderImage","Course", new { id = Model.Completed[i].PicId})" /></div>
                <div id="mandatory-course">
                    <span class="descriptive">Priority:</span>
                    @if (Model.Completed[i].Mandatory)
           {
                        @:Mandatory
                        }
                    else
                    {
                        @:Optional
                        }
                </div>
                <div id="coursename"> <span class="descriptive">Course:</span>  @Html.DisplayFor(x => x.Completed[i].CourseName)</div>
                <div id="assignementdate"> <span class="descriptive">Assignement Date:</span>  @Html.DisplayFor(x => x.Completed[i].AssignmentDate)</div>
                <div id="duedate"> <span class="descriptive">Grade :</span> @Html.DisplayFor(x => x.Completed[i].Grade)</div>
                <div id=" Filler"></div>

                @Html.ActionLink("Take Course", "takecourseasstate", "course", new { courseStateId = Model.Completed[i].Id }, new { id = "course-button" })
            </div>
           }
            </div>
        </div>
      
    </div>
    </div>
